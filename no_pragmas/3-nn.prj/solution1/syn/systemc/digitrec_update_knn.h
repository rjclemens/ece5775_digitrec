// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _digitrec_update_knn_HH_
#define _digitrec_update_knn_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct digitrec_update_knn : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<49> > test_inst_V;
    sc_in< sc_lv<48> > train_inst_V;
    sc_out< sc_lv<5> > min_distances_V_address0;
    sc_out< sc_logic > min_distances_V_ce0;
    sc_out< sc_logic > min_distances_V_we0;
    sc_out< sc_lv<6> > min_distances_V_d0;
    sc_in< sc_lv<6> > min_distances_V_q0;
    sc_in< sc_lv<4> > tmp_4;


    // Module declarations
    digitrec_update_knn(sc_module_name name);
    SC_HAS_PROCESS(digitrec_update_knn);

    ~digitrec_update_knn();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_22;
    sc_signal< sc_lv<6> > tmp_6_fu_152_p2;
    sc_signal< sc_lv<6> > tmp_6_reg_264;
    sc_signal< sc_lv<49> > r_V_fu_162_p2;
    sc_signal< sc_lv<6> > count_V_fu_174_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_52;
    sc_signal< sc_lv<49> > tmp_6_i_fu_186_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_168_p2;
    sc_signal< sc_lv<2> > i_fu_198_p2;
    sc_signal< sc_lv<2> > i_reg_291;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_67;
    sc_signal< sc_lv<1> > exitcond_fu_192_p2;
    sc_signal< sc_lv<5> > min_distances_V_addr_reg_301;
    sc_signal< sc_lv<6> > max_V_s_fu_242_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_85;
    sc_signal< sc_lv<4> > i_val_V_026_s_fu_250_p3;
    sc_signal< sc_lv<6> > distance_V_reg_82;
    sc_signal< sc_lv<49> > n_V_buf_i_reg_95;
    sc_signal< sc_lv<6> > p_s_reg_104;
    sc_signal< sc_lv<4> > p_026_s_reg_116;
    sc_signal< sc_lv<2> > val_assign_reg_128;
    sc_signal< sc_lv<64> > tmp_8_cast_fu_213_p1;
    sc_signal< sc_lv<64> > tmp_7_cast_fu_227_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_114;
    sc_signal< sc_lv<1> > tmp_1_fu_258_p2;
    sc_signal< sc_lv<6> > tmp_5_fu_144_p3;
    sc_signal< sc_lv<6> > tmp_4_cast_cast_fu_140_p1;
    sc_signal< sc_lv<49> > train_inst_V_cast_fu_158_p1;
    sc_signal< sc_lv<49> > tmp_5_i_fu_180_p2;
    sc_signal< sc_lv<6> > tmp_2_cast_fu_204_p1;
    sc_signal< sc_lv<6> > tmp_8_fu_208_p2;
    sc_signal< sc_lv<6> > tmp_cast_fu_218_p1;
    sc_signal< sc_lv<6> > tmp_7_fu_222_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_232_p2;
    sc_signal< sc_lv<4> > i_val_V_fu_238_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<49> ap_const_lv49_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<49> ap_const_lv49_1FFFFFFFFFFFF;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_114();
    void thread_ap_sig_22();
    void thread_ap_sig_52();
    void thread_ap_sig_67();
    void thread_ap_sig_85();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_count_V_fu_174_p2();
    void thread_exitcond_fu_192_p2();
    void thread_i_fu_198_p2();
    void thread_i_val_V_026_s_fu_250_p3();
    void thread_i_val_V_fu_238_p1();
    void thread_max_V_s_fu_242_p3();
    void thread_min_distances_V_address0();
    void thread_min_distances_V_ce0();
    void thread_min_distances_V_d0();
    void thread_min_distances_V_we0();
    void thread_r_V_fu_162_p2();
    void thread_tmp_1_fu_258_p2();
    void thread_tmp_2_cast_fu_204_p1();
    void thread_tmp_3_fu_232_p2();
    void thread_tmp_4_cast_cast_fu_140_p1();
    void thread_tmp_5_fu_144_p3();
    void thread_tmp_5_i_fu_180_p2();
    void thread_tmp_6_fu_152_p2();
    void thread_tmp_6_i_fu_186_p2();
    void thread_tmp_7_cast_fu_227_p1();
    void thread_tmp_7_fu_222_p2();
    void thread_tmp_8_cast_fu_213_p1();
    void thread_tmp_8_fu_208_p2();
    void thread_tmp_cast_fu_218_p1();
    void thread_tmp_i_fu_168_p2();
    void thread_train_inst_V_cast_fu_158_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
