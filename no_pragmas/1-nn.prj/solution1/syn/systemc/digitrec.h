// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _digitrec_HH_
#define _digitrec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "digitrec_update_knn.h"
#include "digitrec_knn_vote.h"
#include "digitrec_training_data_V.h"
#include "digitrec_knn_set_0_V.h"

namespace ap_rtl {

struct digitrec : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<49> > input_V;
    sc_out< sc_lv<4> > ap_return;


    // Module declarations
    digitrec(sc_module_name name);
    SC_HAS_PROCESS(digitrec);

    ~digitrec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    digitrec_training_data_V* training_data_V_U;
    digitrec_knn_set_0_V* knn_set_0_V_U;
    digitrec_update_knn* grp_digitrec_update_knn_fu_135;
    digitrec_knn_vote* grp_digitrec_knn_vote_fu_145;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_22;
    sc_signal< sc_lv<15> > training_data_V_address0;
    sc_signal< sc_logic > training_data_V_ce0;
    sc_signal< sc_lv<48> > training_data_V_q0;
    sc_signal< sc_lv<4> > i_1_fu_156_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_50;
    sc_signal< sc_lv<15> > i4_cast3_fu_167_p1;
    sc_signal< sc_lv<15> > i4_cast3_reg_224;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_59;
    sc_signal< sc_lv<11> > i_2_fu_177_p2;
    sc_signal< sc_lv<11> > i_2_reg_232;
    sc_signal< sc_lv<4> > j_1_fu_189_p2;
    sc_signal< sc_lv<4> > j_1_reg_240;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_70;
    sc_signal< sc_lv<15> > next_mul_fu_195_p2;
    sc_signal< sc_lv<15> > next_mul_reg_245;
    sc_signal< sc_lv<1> > exitcond_fu_183_p2;
    sc_signal< sc_lv<48> > training_instance_V_reg_255;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_86;
    sc_signal< sc_lv<4> > knn_set_0_V_address0;
    sc_signal< sc_logic > knn_set_0_V_ce0;
    sc_signal< sc_logic > knn_set_0_V_we0;
    sc_signal< sc_lv<6> > knn_set_0_V_d0;
    sc_signal< sc_lv<6> > knn_set_0_V_q0;
    sc_signal< sc_logic > grp_digitrec_update_knn_fu_135_ap_start;
    sc_signal< sc_logic > grp_digitrec_update_knn_fu_135_ap_done;
    sc_signal< sc_logic > grp_digitrec_update_knn_fu_135_ap_idle;
    sc_signal< sc_logic > grp_digitrec_update_knn_fu_135_ap_ready;
    sc_signal< sc_lv<4> > grp_digitrec_update_knn_fu_135_min_distances_0_V_address0;
    sc_signal< sc_logic > grp_digitrec_update_knn_fu_135_min_distances_0_V_ce0;
    sc_signal< sc_logic > grp_digitrec_update_knn_fu_135_min_distances_0_V_we0;
    sc_signal< sc_lv<6> > grp_digitrec_update_knn_fu_135_min_distances_0_V_d0;
    sc_signal< sc_logic > grp_digitrec_knn_vote_fu_145_ap_start;
    sc_signal< sc_logic > grp_digitrec_knn_vote_fu_145_ap_done;
    sc_signal< sc_logic > grp_digitrec_knn_vote_fu_145_ap_idle;
    sc_signal< sc_logic > grp_digitrec_knn_vote_fu_145_ap_ready;
    sc_signal< sc_lv<4> > grp_digitrec_knn_vote_fu_145_knn_set_0_V_address0;
    sc_signal< sc_logic > grp_digitrec_knn_vote_fu_145_knn_set_0_V_ce0;
    sc_signal< sc_lv<4> > grp_digitrec_knn_vote_fu_145_ap_return;
    sc_signal< sc_lv<4> > i_reg_90;
    sc_signal< sc_lv<1> > exitcond1_fu_150_p2;
    sc_signal< sc_lv<11> > i4_reg_101;
    sc_signal< sc_lv<4> > j_reg_112;
    sc_signal< sc_lv<1> > exitcond2_fu_171_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_145;
    sc_signal< sc_lv<15> > phi_mul_reg_124;
    sc_signal< sc_logic > ap_reg_grp_digitrec_update_knn_fu_135_ap_start;
    sc_signal< sc_logic > ap_reg_grp_digitrec_knn_vote_fu_145_ap_start;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_164;
    sc_signal< sc_lv<64> > tmp_fu_162_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_206_p1;
    sc_signal< sc_lv<15> > tmp_2_fu_201_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<11> ap_const_lv11_708;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<15> ap_const_lv15_708;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_145();
    void thread_ap_sig_164();
    void thread_ap_sig_22();
    void thread_ap_sig_50();
    void thread_ap_sig_59();
    void thread_ap_sig_70();
    void thread_ap_sig_86();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_exitcond1_fu_150_p2();
    void thread_exitcond2_fu_171_p2();
    void thread_exitcond_fu_183_p2();
    void thread_grp_digitrec_knn_vote_fu_145_ap_start();
    void thread_grp_digitrec_update_knn_fu_135_ap_start();
    void thread_i4_cast3_fu_167_p1();
    void thread_i_1_fu_156_p2();
    void thread_i_2_fu_177_p2();
    void thread_j_1_fu_189_p2();
    void thread_knn_set_0_V_address0();
    void thread_knn_set_0_V_ce0();
    void thread_knn_set_0_V_d0();
    void thread_knn_set_0_V_we0();
    void thread_next_mul_fu_195_p2();
    void thread_tmp_2_fu_201_p2();
    void thread_tmp_3_fu_206_p1();
    void thread_tmp_fu_162_p1();
    void thread_training_data_V_address0();
    void thread_training_data_V_ce0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
