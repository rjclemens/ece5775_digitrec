// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="digitrec,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.278000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=96,HLS_SYN_DSP=0,HLS_SYN_FF=261,HLS_SYN_LUT=469}" *)

module digitrec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_st6_fsm_5 = 7'b100000;
parameter    ap_ST_st7_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv6_32 = 6'b110010;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv11_708 = 11'b11100001000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv15_708 = 15'b11100001000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [48:0] input_V;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
wire   [14:0] training_data_V_address0;
reg    training_data_V_ce0;
wire   [47:0] training_data_V_q0;
wire   [3:0] i_1_fu_156_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_50;
wire   [14:0] i4_cast3_fu_167_p1;
reg   [14:0] i4_cast3_reg_224;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_59;
wire   [10:0] i_2_fu_177_p2;
reg   [10:0] i_2_reg_232;
wire   [3:0] j_1_fu_189_p2;
reg   [3:0] j_1_reg_240;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_70;
wire   [14:0] next_mul_fu_195_p2;
reg   [14:0] next_mul_reg_245;
wire   [0:0] exitcond_fu_183_p2;
reg   [47:0] training_instance_V_reg_255;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_86;
reg   [3:0] knn_set_0_V_address0;
reg    knn_set_0_V_ce0;
reg    knn_set_0_V_we0;
reg   [5:0] knn_set_0_V_d0;
wire   [5:0] knn_set_0_V_q0;
wire    grp_digitrec_update_knn_fu_135_ap_start;
wire    grp_digitrec_update_knn_fu_135_ap_done;
wire    grp_digitrec_update_knn_fu_135_ap_idle;
wire    grp_digitrec_update_knn_fu_135_ap_ready;
wire   [3:0] grp_digitrec_update_knn_fu_135_min_distances_0_V_address0;
wire    grp_digitrec_update_knn_fu_135_min_distances_0_V_ce0;
wire    grp_digitrec_update_knn_fu_135_min_distances_0_V_we0;
wire   [5:0] grp_digitrec_update_knn_fu_135_min_distances_0_V_d0;
wire    grp_digitrec_knn_vote_fu_145_ap_start;
wire    grp_digitrec_knn_vote_fu_145_ap_done;
wire    grp_digitrec_knn_vote_fu_145_ap_idle;
wire    grp_digitrec_knn_vote_fu_145_ap_ready;
wire   [3:0] grp_digitrec_knn_vote_fu_145_knn_set_0_V_address0;
wire    grp_digitrec_knn_vote_fu_145_knn_set_0_V_ce0;
wire   [3:0] grp_digitrec_knn_vote_fu_145_ap_return;
reg   [3:0] i_reg_90;
wire   [0:0] exitcond1_fu_150_p2;
reg   [10:0] i4_reg_101;
reg   [3:0] j_reg_112;
wire   [0:0] exitcond2_fu_171_p2;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_145;
reg   [14:0] phi_mul_reg_124;
reg    ap_reg_grp_digitrec_update_knn_fu_135_ap_start;
reg    ap_reg_grp_digitrec_knn_vote_fu_145_ap_start;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_164;
wire   [63:0] tmp_fu_162_p1;
wire   [63:0] tmp_3_fu_206_p1;
wire   [14:0] tmp_2_fu_201_p2;
reg   [6:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'b1;
#0 ap_reg_grp_digitrec_update_knn_fu_135_ap_start = 1'b0;
#0 ap_reg_grp_digitrec_knn_vote_fu_145_ap_start = 1'b0;
end

digitrec_training_data_V #(
    .DataWidth( 48 ),
    .AddressRange( 18000 ),
    .AddressWidth( 15 ))
training_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_address0),
    .ce0(training_data_V_ce0),
    .q0(training_data_V_q0)
);

digitrec_knn_set_0_V #(
    .DataWidth( 6 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
knn_set_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(knn_set_0_V_address0),
    .ce0(knn_set_0_V_ce0),
    .we0(knn_set_0_V_we0),
    .d0(knn_set_0_V_d0),
    .q0(knn_set_0_V_q0)
);

digitrec_update_knn grp_digitrec_update_knn_fu_135(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_digitrec_update_knn_fu_135_ap_start),
    .ap_done(grp_digitrec_update_knn_fu_135_ap_done),
    .ap_idle(grp_digitrec_update_knn_fu_135_ap_idle),
    .ap_ready(grp_digitrec_update_knn_fu_135_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(training_instance_V_reg_255),
    .min_distances_0_V_address0(grp_digitrec_update_knn_fu_135_min_distances_0_V_address0),
    .min_distances_0_V_ce0(grp_digitrec_update_knn_fu_135_min_distances_0_V_ce0),
    .min_distances_0_V_we0(grp_digitrec_update_knn_fu_135_min_distances_0_V_we0),
    .min_distances_0_V_d0(grp_digitrec_update_knn_fu_135_min_distances_0_V_d0),
    .min_distances_0_V_q0(knn_set_0_V_q0),
    .tmp_4(j_reg_112)
);

digitrec_knn_vote grp_digitrec_knn_vote_fu_145(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_digitrec_knn_vote_fu_145_ap_start),
    .ap_done(grp_digitrec_knn_vote_fu_145_ap_done),
    .ap_idle(grp_digitrec_knn_vote_fu_145_ap_idle),
    .ap_ready(grp_digitrec_knn_vote_fu_145_ap_ready),
    .knn_set_0_V_address0(grp_digitrec_knn_vote_fu_145_knn_set_0_V_address0),
    .knn_set_0_V_ce0(grp_digitrec_knn_vote_fu_145_knn_set_0_V_ce0),
    .knn_set_0_V_q0(knn_set_0_V_q0),
    .ap_return(grp_digitrec_knn_vote_fu_145_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_digitrec_knn_vote_fu_145_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond2_fu_171_p2))) begin
            ap_reg_grp_digitrec_knn_vote_fu_145_ap_start <= 1'b1;
        end else if ((1'b1 == grp_digitrec_knn_vote_fu_145_ap_ready)) begin
            ap_reg_grp_digitrec_knn_vote_fu_145_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_digitrec_update_knn_fu_135_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            ap_reg_grp_digitrec_update_knn_fu_135_ap_start <= 1'b1;
        end else if ((1'b1 == grp_digitrec_update_knn_fu_135_ap_ready)) begin
            ap_reg_grp_digitrec_update_knn_fu_135_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond1_fu_150_p2))) begin
        i4_reg_101 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond_fu_183_p2 == 1'b0))) begin
        i4_reg_101 <= i_2_reg_232;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_90 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_150_p2))) begin
        i_reg_90 <= i_1_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == grp_digitrec_update_knn_fu_135_ap_done))) begin
        j_reg_112 <= j_1_reg_240;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond2_fu_171_p2))) begin
        j_reg_112 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == grp_digitrec_update_knn_fu_135_ap_done))) begin
        phi_mul_reg_124 <= next_mul_reg_245;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond2_fu_171_p2))) begin
        phi_mul_reg_124 <= ap_const_lv15_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i4_cast3_reg_224[10 : 0] <= i4_cast3_fu_167_p1[10 : 0];
        i_2_reg_232 <= i_2_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_240 <= j_1_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_fu_183_p2 == 1'b0))) begin
        next_mul_reg_245 <= next_mul_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        training_instance_V_reg_255 <= training_data_V_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_digitrec_knn_vote_fu_145_ap_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_digitrec_knn_vote_fu_145_ap_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_50) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_59) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_70) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_86) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_145) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_164) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        knn_set_0_V_address0 = tmp_fu_162_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        knn_set_0_V_address0 = grp_digitrec_knn_vote_fu_145_knn_set_0_V_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        knn_set_0_V_address0 = grp_digitrec_update_knn_fu_135_min_distances_0_V_address0;
    end else begin
        knn_set_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        knn_set_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        knn_set_0_V_ce0 = grp_digitrec_knn_vote_fu_145_knn_set_0_V_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        knn_set_0_V_ce0 = grp_digitrec_update_knn_fu_135_min_distances_0_V_ce0;
    end else begin
        knn_set_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        knn_set_0_V_d0 = ap_const_lv6_32;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        knn_set_0_V_d0 = grp_digitrec_update_knn_fu_135_min_distances_0_V_d0;
    end else begin
        knn_set_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond1_fu_150_p2))) begin
        knn_set_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        knn_set_0_V_we0 = grp_digitrec_update_knn_fu_135_min_distances_0_V_we0;
    end else begin
        knn_set_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        training_data_V_ce0 = 1'b1;
    end else begin
        training_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond1_fu_150_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == exitcond2_fu_171_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(exitcond_fu_183_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == grp_digitrec_update_knn_fu_135_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == grp_digitrec_knn_vote_fu_145_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = grp_digitrec_knn_vote_fu_145_ap_return;

always @ (*) begin
    ap_sig_145 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_164 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_50 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_59 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_70 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_86 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

assign exitcond1_fu_150_p2 = ((i_reg_90 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond2_fu_171_p2 = ((i4_reg_101 == ap_const_lv11_708) ? 1'b1 : 1'b0);

assign exitcond_fu_183_p2 = ((j_reg_112 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign grp_digitrec_knn_vote_fu_145_ap_start = ap_reg_grp_digitrec_knn_vote_fu_145_ap_start;

assign grp_digitrec_update_knn_fu_135_ap_start = ap_reg_grp_digitrec_update_knn_fu_135_ap_start;

assign i4_cast3_fu_167_p1 = i4_reg_101;

assign i_1_fu_156_p2 = (i_reg_90 + ap_const_lv4_1);

assign i_2_fu_177_p2 = (i4_reg_101 + ap_const_lv11_1);

assign j_1_fu_189_p2 = (j_reg_112 + ap_const_lv4_1);

assign next_mul_fu_195_p2 = (phi_mul_reg_124 + ap_const_lv15_708);

assign tmp_2_fu_201_p2 = (i4_cast3_reg_224 + phi_mul_reg_124);

assign tmp_3_fu_206_p1 = tmp_2_fu_201_p2;

assign tmp_fu_162_p1 = i_reg_90;

assign training_data_V_address0 = tmp_3_fu_206_p1;

always @ (posedge ap_clk) begin
    i4_cast3_reg_224[14:11] <= 4'b0000;
end

endmodule //digitrec
