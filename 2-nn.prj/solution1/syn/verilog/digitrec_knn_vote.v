// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module digitrec_knn_vote (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        knn_set_0_0_V_read,
        knn_set_0_1_V_read,
        knn_set_1_0_V_read,
        knn_set_1_1_V_read,
        knn_set_2_0_V_read,
        knn_set_2_1_V_read,
        knn_set_3_0_V_read,
        knn_set_3_1_V_read,
        knn_set_4_0_V_read,
        knn_set_4_1_V_read,
        knn_set_5_0_V_read,
        knn_set_5_1_V_read,
        knn_set_6_0_V_read,
        knn_set_6_1_V_read,
        knn_set_7_0_V_read,
        knn_set_7_1_V_read,
        knn_set_8_0_V_read,
        knn_set_8_1_V_read,
        knn_set_9_0_V_read,
        knn_set_9_1_V_read,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_st3_fsm_2 = 4'b100;
parameter    ap_ST_st4_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_0 = 4'b0000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] knn_set_0_0_V_read;
input  [5:0] knn_set_0_1_V_read;
input  [5:0] knn_set_1_0_V_read;
input  [5:0] knn_set_1_1_V_read;
input  [5:0] knn_set_2_0_V_read;
input  [5:0] knn_set_2_1_V_read;
input  [5:0] knn_set_3_0_V_read;
input  [5:0] knn_set_3_1_V_read;
input  [5:0] knn_set_4_0_V_read;
input  [5:0] knn_set_4_1_V_read;
input  [5:0] knn_set_5_0_V_read;
input  [5:0] knn_set_5_1_V_read;
input  [5:0] knn_set_6_0_V_read;
input  [5:0] knn_set_6_1_V_read;
input  [5:0] knn_set_7_0_V_read;
input  [5:0] knn_set_7_1_V_read;
input  [5:0] knn_set_8_0_V_read;
input  [5:0] knn_set_8_1_V_read;
input  [5:0] knn_set_9_0_V_read;
input  [5:0] knn_set_9_1_V_read;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_21;
wire   [0:0] tmp_6_1_fu_206_p2;
reg   [0:0] tmp_6_1_reg_521;
wire   [0:0] tmp_6_2_fu_234_p2;
reg   [0:0] tmp_6_2_reg_526;
wire   [6:0] min_2_min_2_fu_240_p3;
reg   [6:0] min_2_min_2_reg_531;
wire   [0:0] tmp_6_3_fu_262_p2;
reg   [0:0] tmp_6_3_reg_537;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_63;
wire   [0:0] tmp_6_4_fu_288_p2;
reg   [0:0] tmp_6_4_reg_543;
wire   [6:0] min_2_min_4_fu_294_p3;
reg   [6:0] min_2_min_4_reg_548;
wire   [2:0] agg_result_V_0_agg_result_V_02_5_fu_360_p3;
reg   [2:0] agg_result_V_0_agg_result_V_02_5_reg_554;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_76;
wire   [0:0] tmp_6_6_fu_389_p2;
reg   [0:0] tmp_6_6_reg_559;
wire   [6:0] min_2_min_6_fu_395_p3;
reg   [6:0] min_2_min_6_reg_564;
wire   [6:0] sum_7_1_fu_411_p2;
reg   [6:0] sum_7_1_reg_570;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_106;
wire   [6:0] tmp_8_0_1_cast_fu_182_p1;
wire   [6:0] tmp_8_cast_fu_178_p1;
wire   [6:0] tmp_8_1_1_cast_fu_196_p1;
wire   [6:0] tmp_8_1_cast_fu_192_p1;
wire   [6:0] sum_1_1_fu_200_p2;
wire   [6:0] sum_0_1_fu_186_p2;
wire   [6:0] tmp_8_2_1_cast_fu_224_p1;
wire   [6:0] tmp_8_2_cast_fu_220_p1;
wire   [6:0] sum_2_1_fu_228_p2;
wire   [6:0] min_2_min_1_fu_212_p3;
wire   [6:0] tmp_8_3_1_cast_fu_252_p1;
wire   [6:0] tmp_8_3_cast_fu_248_p1;
wire   [6:0] sum_3_1_fu_256_p2;
wire   [6:0] tmp_8_4_1_cast_fu_278_p1;
wire   [6:0] tmp_8_4_cast_fu_274_p1;
wire   [6:0] sum_4_1_fu_282_p2;
wire   [6:0] min_2_min_3_fu_267_p3;
wire   [0:0] tmp_s_fu_312_p2;
wire   [1:0] agg_result_V_0_agg_result_V_02_2_fu_305_p3;
wire   [1:0] agg_result_V_0_agg_result_V_s_fu_302_p1;
wire   [1:0] agg_result_V_0_agg_result_V_02_3_fu_316_p3;
wire   [6:0] tmp_8_5_1_cast_fu_332_p1;
wire   [6:0] tmp_8_5_cast_fu_328_p1;
wire   [6:0] sum_5_1_fu_336_p2;
wire   [0:0] tmp_6_5_fu_342_p2;
wire   [0:0] tmp_1_fu_355_p2;
wire   [2:0] agg_result_V_0_agg_result_V_02_4_fu_347_p3;
wire   [2:0] agg_result_V_0_agg_result_V_02_1_fu_324_p1;
wire   [6:0] tmp_8_6_1_cast_fu_379_p1;
wire   [6:0] tmp_8_6_cast_fu_375_p1;
wire   [6:0] sum_6_1_fu_383_p2;
wire   [6:0] min_2_min_5_fu_368_p3;
wire   [6:0] tmp_8_7_1_cast_fu_407_p1;
wire   [6:0] tmp_8_7_cast_fu_403_p1;
wire   [0:0] tmp_6_7_fu_417_p2;
wire   [0:0] tmp_2_fu_429_p2;
wire   [2:0] agg_result_V_0_agg_result_V_02_fu_421_p3;
wire   [2:0] agg_result_V_0_agg_result_V_02_7_fu_434_p3;
wire   [6:0] tmp_8_8_1_cast_fu_455_p1;
wire   [6:0] tmp_8_8_cast_fu_451_p1;
wire   [6:0] sum_8_1_fu_459_p2;
wire   [6:0] min_2_min_7_fu_445_p3;
wire   [0:0] tmp_6_8_fu_465_p2;
wire   [6:0] tmp_8_9_1_cast_fu_483_p1;
wire   [6:0] tmp_8_9_cast_fu_479_p1;
wire   [6:0] sum_9_1_fu_487_p2;
wire   [6:0] min_2_min_8_fu_471_p3;
wire   [0:0] tmp_6_9_fu_493_p2;
wire   [0:0] tmp_3_fu_507_p2;
wire   [3:0] agg_result_V_0_agg_result_V_02_8_fu_499_p3;
wire   [3:0] agg_result_V_0_agg_result_V_02_6_fu_441_p1;
wire   [3:0] agg_result_V_0_agg_result_V_02_9_fu_513_p3;
reg   [3:0] ap_return_preg;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'b1;
#0 ap_return_preg = 4'b0000;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv4_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            ap_return_preg <= agg_result_V_0_agg_result_V_02_9_fu_513_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        agg_result_V_0_agg_result_V_02_5_reg_554 <= agg_result_V_0_agg_result_V_02_5_fu_360_p3;
        min_2_min_6_reg_564 <= min_2_min_6_fu_395_p3;
        sum_7_1_reg_570 <= sum_7_1_fu_411_p2;
        tmp_6_6_reg_559 <= tmp_6_6_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        min_2_min_2_reg_531 <= min_2_min_2_fu_240_p3;
        tmp_6_1_reg_521 <= tmp_6_1_fu_206_p2;
        tmp_6_2_reg_526 <= tmp_6_2_fu_234_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        min_2_min_4_reg_548 <= min_2_min_4_fu_294_p3;
        tmp_6_3_reg_537 <= tmp_6_3_fu_262_p2;
        tmp_6_4_reg_543 <= tmp_6_4_fu_288_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        ap_return = agg_result_V_0_agg_result_V_02_9_fu_513_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_63) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_76) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_106) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign agg_result_V_0_agg_result_V_02_1_fu_324_p1 = agg_result_V_0_agg_result_V_02_3_fu_316_p3;

assign agg_result_V_0_agg_result_V_02_2_fu_305_p3 = ((tmp_6_3_reg_537[0:0] === 1'b1) ? ap_const_lv2_3 : ap_const_lv2_2);

assign agg_result_V_0_agg_result_V_02_3_fu_316_p3 = ((tmp_s_fu_312_p2[0:0] === 1'b1) ? agg_result_V_0_agg_result_V_02_2_fu_305_p3 : agg_result_V_0_agg_result_V_s_fu_302_p1);

assign agg_result_V_0_agg_result_V_02_4_fu_347_p3 = ((tmp_6_5_fu_342_p2[0:0] === 1'b1) ? ap_const_lv3_5 : ap_const_lv3_4);

assign agg_result_V_0_agg_result_V_02_5_fu_360_p3 = ((tmp_1_fu_355_p2[0:0] === 1'b1) ? agg_result_V_0_agg_result_V_02_4_fu_347_p3 : agg_result_V_0_agg_result_V_02_1_fu_324_p1);

assign agg_result_V_0_agg_result_V_02_6_fu_441_p1 = agg_result_V_0_agg_result_V_02_7_fu_434_p3;

assign agg_result_V_0_agg_result_V_02_7_fu_434_p3 = ((tmp_2_fu_429_p2[0:0] === 1'b1) ? agg_result_V_0_agg_result_V_02_fu_421_p3 : agg_result_V_0_agg_result_V_02_5_reg_554);

assign agg_result_V_0_agg_result_V_02_8_fu_499_p3 = ((tmp_6_9_fu_493_p2[0:0] === 1'b1) ? ap_const_lv4_9 : ap_const_lv4_8);

assign agg_result_V_0_agg_result_V_02_9_fu_513_p3 = ((tmp_3_fu_507_p2[0:0] === 1'b1) ? agg_result_V_0_agg_result_V_02_8_fu_499_p3 : agg_result_V_0_agg_result_V_02_6_fu_441_p1);

assign agg_result_V_0_agg_result_V_02_fu_421_p3 = ((tmp_6_7_fu_417_p2[0:0] === 1'b1) ? ap_const_lv3_7 : ap_const_lv3_6);

assign agg_result_V_0_agg_result_V_s_fu_302_p1 = tmp_6_1_reg_521;

always @ (*) begin
    ap_sig_106 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_21 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_63 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_76 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign min_2_min_1_fu_212_p3 = ((tmp_6_1_fu_206_p2[0:0] === 1'b1) ? sum_1_1_fu_200_p2 : sum_0_1_fu_186_p2);

assign min_2_min_2_fu_240_p3 = ((tmp_6_2_fu_234_p2[0:0] === 1'b1) ? sum_2_1_fu_228_p2 : min_2_min_1_fu_212_p3);

assign min_2_min_3_fu_267_p3 = ((tmp_6_3_fu_262_p2[0:0] === 1'b1) ? sum_3_1_fu_256_p2 : min_2_min_2_reg_531);

assign min_2_min_4_fu_294_p3 = ((tmp_6_4_fu_288_p2[0:0] === 1'b1) ? sum_4_1_fu_282_p2 : min_2_min_3_fu_267_p3);

assign min_2_min_5_fu_368_p3 = ((tmp_6_5_fu_342_p2[0:0] === 1'b1) ? sum_5_1_fu_336_p2 : min_2_min_4_reg_548);

assign min_2_min_6_fu_395_p3 = ((tmp_6_6_fu_389_p2[0:0] === 1'b1) ? sum_6_1_fu_383_p2 : min_2_min_5_fu_368_p3);

assign min_2_min_7_fu_445_p3 = ((tmp_6_7_fu_417_p2[0:0] === 1'b1) ? sum_7_1_reg_570 : min_2_min_6_reg_564);

assign min_2_min_8_fu_471_p3 = ((tmp_6_8_fu_465_p2[0:0] === 1'b1) ? sum_8_1_fu_459_p2 : min_2_min_7_fu_445_p3);

assign sum_0_1_fu_186_p2 = (tmp_8_0_1_cast_fu_182_p1 + tmp_8_cast_fu_178_p1);

assign sum_1_1_fu_200_p2 = (tmp_8_1_1_cast_fu_196_p1 + tmp_8_1_cast_fu_192_p1);

assign sum_2_1_fu_228_p2 = (tmp_8_2_1_cast_fu_224_p1 + tmp_8_2_cast_fu_220_p1);

assign sum_3_1_fu_256_p2 = (tmp_8_3_1_cast_fu_252_p1 + tmp_8_3_cast_fu_248_p1);

assign sum_4_1_fu_282_p2 = (tmp_8_4_1_cast_fu_278_p1 + tmp_8_4_cast_fu_274_p1);

assign sum_5_1_fu_336_p2 = (tmp_8_5_1_cast_fu_332_p1 + tmp_8_5_cast_fu_328_p1);

assign sum_6_1_fu_383_p2 = (tmp_8_6_1_cast_fu_379_p1 + tmp_8_6_cast_fu_375_p1);

assign sum_7_1_fu_411_p2 = (tmp_8_7_1_cast_fu_407_p1 + tmp_8_7_cast_fu_403_p1);

assign sum_8_1_fu_459_p2 = (tmp_8_8_1_cast_fu_455_p1 + tmp_8_8_cast_fu_451_p1);

assign sum_9_1_fu_487_p2 = (tmp_8_9_1_cast_fu_483_p1 + tmp_8_9_cast_fu_479_p1);

assign tmp_1_fu_355_p2 = (tmp_6_5_fu_342_p2 | tmp_6_4_reg_543);

assign tmp_2_fu_429_p2 = (tmp_6_7_fu_417_p2 | tmp_6_6_reg_559);

assign tmp_3_fu_507_p2 = (tmp_6_9_fu_493_p2 | tmp_6_8_fu_465_p2);

assign tmp_6_1_fu_206_p2 = ((sum_1_1_fu_200_p2 < sum_0_1_fu_186_p2) ? 1'b1 : 1'b0);

assign tmp_6_2_fu_234_p2 = ((sum_2_1_fu_228_p2 < min_2_min_1_fu_212_p3) ? 1'b1 : 1'b0);

assign tmp_6_3_fu_262_p2 = ((sum_3_1_fu_256_p2 < min_2_min_2_reg_531) ? 1'b1 : 1'b0);

assign tmp_6_4_fu_288_p2 = ((sum_4_1_fu_282_p2 < min_2_min_3_fu_267_p3) ? 1'b1 : 1'b0);

assign tmp_6_5_fu_342_p2 = ((sum_5_1_fu_336_p2 < min_2_min_4_reg_548) ? 1'b1 : 1'b0);

assign tmp_6_6_fu_389_p2 = ((sum_6_1_fu_383_p2 < min_2_min_5_fu_368_p3) ? 1'b1 : 1'b0);

assign tmp_6_7_fu_417_p2 = ((sum_7_1_reg_570 < min_2_min_6_reg_564) ? 1'b1 : 1'b0);

assign tmp_6_8_fu_465_p2 = ((sum_8_1_fu_459_p2 < min_2_min_7_fu_445_p3) ? 1'b1 : 1'b0);

assign tmp_6_9_fu_493_p2 = ((sum_9_1_fu_487_p2 < min_2_min_8_fu_471_p3) ? 1'b1 : 1'b0);

assign tmp_8_0_1_cast_fu_182_p1 = knn_set_0_1_V_read;

assign tmp_8_1_1_cast_fu_196_p1 = knn_set_1_1_V_read;

assign tmp_8_1_cast_fu_192_p1 = knn_set_1_0_V_read;

assign tmp_8_2_1_cast_fu_224_p1 = knn_set_2_1_V_read;

assign tmp_8_2_cast_fu_220_p1 = knn_set_2_0_V_read;

assign tmp_8_3_1_cast_fu_252_p1 = knn_set_3_1_V_read;

assign tmp_8_3_cast_fu_248_p1 = knn_set_3_0_V_read;

assign tmp_8_4_1_cast_fu_278_p1 = knn_set_4_1_V_read;

assign tmp_8_4_cast_fu_274_p1 = knn_set_4_0_V_read;

assign tmp_8_5_1_cast_fu_332_p1 = knn_set_5_1_V_read;

assign tmp_8_5_cast_fu_328_p1 = knn_set_5_0_V_read;

assign tmp_8_6_1_cast_fu_379_p1 = knn_set_6_1_V_read;

assign tmp_8_6_cast_fu_375_p1 = knn_set_6_0_V_read;

assign tmp_8_7_1_cast_fu_407_p1 = knn_set_7_1_V_read;

assign tmp_8_7_cast_fu_403_p1 = knn_set_7_0_V_read;

assign tmp_8_8_1_cast_fu_455_p1 = knn_set_8_1_V_read;

assign tmp_8_8_cast_fu_451_p1 = knn_set_8_0_V_read;

assign tmp_8_9_1_cast_fu_483_p1 = knn_set_9_1_V_read;

assign tmp_8_9_cast_fu_479_p1 = knn_set_9_0_V_read;

assign tmp_8_cast_fu_178_p1 = knn_set_0_0_V_read;

assign tmp_s_fu_312_p2 = (tmp_6_3_reg_537 | tmp_6_2_reg_526);

endmodule //digitrec_knn_vote
