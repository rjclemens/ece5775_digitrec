// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "digitrec_update_knn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic digitrec_update_knn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic digitrec_update_knn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> digitrec_update_knn::ap_ST_pp0_stg0_fsm_0 = "1";
const sc_lv<32> digitrec_update_knn::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> digitrec_update_knn::ap_const_lv1_1 = "1";
const sc_lv<1> digitrec_update_knn::ap_const_lv1_0 = "0";
const sc_lv<3> digitrec_update_knn::ap_const_lv3_3 = "11";
const sc_lv<3> digitrec_update_knn::ap_const_lv3_2 = "10";
const sc_lv<3> digitrec_update_knn::ap_const_lv3_1 = "1";
const sc_lv<3> digitrec_update_knn::ap_const_lv3_0 = "000";
const sc_lv<2> digitrec_update_knn::ap_const_lv2_2 = "10";
const sc_lv<3> digitrec_update_knn::ap_const_lv3_4 = "100";

digitrec_update_knn::digitrec_update_knn(sc_module_name name) : sc_module(name), mVcdFile(0) {
    distance_V_digitrec_bitcount_fu_125 = new digitrec_bitcount("distance_V_digitrec_bitcount_fu_125");
    distance_V_digitrec_bitcount_fu_125->n_V(distance_V_digitrec_bitcount_fu_125_n_V);
    distance_V_digitrec_bitcount_fu_125->ap_return(distance_V_digitrec_bitcount_fu_125_ap_return);
    digitrec_mux_5to1_sel3_6_1_U2 = new digitrec_mux_5to1_sel3_6_1<1,1,6,6,6,6,6,3,6>("digitrec_mux_5to1_sel3_6_1_U2");
    digitrec_mux_5to1_sel3_6_1_U2->din1(min_distances_0_V_i);
    digitrec_mux_5to1_sel3_6_1_U2->din2(min_distances_1_V_i);
    digitrec_mux_5to1_sel3_6_1_U2->din3(min_distances_2_V_i);
    digitrec_mux_5to1_sel3_6_1_U2->din4(min_distances_3_V_i);
    digitrec_mux_5to1_sel3_6_1_U2->din5(min_distances_4_V_i);
    digitrec_mux_5to1_sel3_6_1_U2->din6(tmp_fu_232_p6);
    digitrec_mux_5to1_sel3_6_1_U2->dout(tmp_fu_232_p7);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_ap_reg_ppiten_pp0_it0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_sig_18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_0);
    sensitive << ( ap_sig_18 );

    SC_METHOD(thread_ap_sig_pprstidle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_distance_V_digitrec_bitcount_fu_125_n_V);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( test_inst_V );
    sensitive << ( train_inst_V_cast_fu_135_p1 );

    SC_METHOD(thread_min_distances_0_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_0_V_i );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );
    sensitive << ( distance_V_digitrec_bitcount_fu_125_ap_return );

    SC_METHOD(thread_min_distances_0_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );

    SC_METHOD(thread_min_distances_1_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_1_V_i );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );
    sensitive << ( distance_V_digitrec_bitcount_fu_125_ap_return );

    SC_METHOD(thread_min_distances_1_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );

    SC_METHOD(thread_min_distances_2_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_2_V_i );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );
    sensitive << ( distance_V_digitrec_bitcount_fu_125_ap_return );

    SC_METHOD(thread_min_distances_2_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );

    SC_METHOD(thread_min_distances_3_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_3_V_i );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );
    sensitive << ( distance_V_digitrec_bitcount_fu_125_ap_return );

    SC_METHOD(thread_min_distances_3_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );

    SC_METHOD(thread_min_distances_4_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_4_V_i );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );
    sensitive << ( distance_V_digitrec_bitcount_fu_125_ap_return );

    SC_METHOD(thread_min_distances_4_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_026_1_4_fu_224_p3 );
    sensitive << ( tmp_1_fu_248_p2 );

    SC_METHOD(thread_p_026_1_1_cast_fu_160_p1);
    sensitive << ( tmp_3_1_fu_146_p2 );

    SC_METHOD(thread_p_026_1_2_cast_fu_186_p1);
    sensitive << ( p_026_1_2_fu_178_p3 );

    SC_METHOD(thread_p_026_1_2_fu_178_p3);
    sensitive << ( tmp_3_2_fu_164_p2 );
    sensitive << ( p_026_1_1_cast_fu_160_p1 );

    SC_METHOD(thread_p_026_1_3_fu_210_p3);
    sensitive << ( tmp_3_4_fu_204_p2 );

    SC_METHOD(thread_p_026_1_4_fu_224_p3);
    sensitive << ( tmp_3_fu_218_p2 );
    sensitive << ( p_026_1_3_fu_210_p3 );
    sensitive << ( p_026_1_2_cast_fu_186_p1 );

    SC_METHOD(thread_p_030_1_1_fu_152_p3);
    sensitive << ( min_distances_0_V_i );
    sensitive << ( min_distances_1_V_i );
    sensitive << ( tmp_3_1_fu_146_p2 );

    SC_METHOD(thread_p_030_1_2_fu_170_p3);
    sensitive << ( min_distances_2_V_i );
    sensitive << ( p_030_1_1_fu_152_p3 );
    sensitive << ( tmp_3_2_fu_164_p2 );

    SC_METHOD(thread_p_030_1_3_fu_196_p3);
    sensitive << ( min_distances_3_V_i );
    sensitive << ( p_030_1_2_fu_170_p3 );
    sensitive << ( tmp_3_3_fu_190_p2 );

    SC_METHOD(thread_tmp_1_fu_248_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( distance_V_digitrec_bitcount_fu_125_ap_return );
    sensitive << ( tmp_fu_232_p7 );

    SC_METHOD(thread_tmp_3_1_fu_146_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_0_V_i );
    sensitive << ( min_distances_1_V_i );

    SC_METHOD(thread_tmp_3_2_fu_164_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_2_V_i );
    sensitive << ( p_030_1_1_fu_152_p3 );

    SC_METHOD(thread_tmp_3_3_fu_190_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_3_V_i );
    sensitive << ( p_030_1_2_fu_170_p3 );

    SC_METHOD(thread_tmp_3_4_fu_204_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( min_distances_4_V_i );
    sensitive << ( p_030_1_3_fu_196_p3 );

    SC_METHOD(thread_tmp_3_fu_218_p2);
    sensitive << ( tmp_3_3_fu_190_p2 );
    sensitive << ( tmp_3_4_fu_204_p2 );

    SC_METHOD(thread_tmp_fu_232_p6);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_0 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( tmp_3_fu_218_p2 );
    sensitive << ( p_026_1_3_fu_210_p3 );
    sensitive << ( p_026_1_2_cast_fu_186_p1 );

    SC_METHOD(thread_train_inst_V_cast_fu_135_p1);
    sensitive << ( train_inst_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_pprstidle_pp0 );

    ap_CS_fsm = "1";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "digitrec_update_knn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, test_inst_V, "(port)test_inst_V");
    sc_trace(mVcdFile, train_inst_V, "(port)train_inst_V");
    sc_trace(mVcdFile, min_distances_0_V_i, "(port)min_distances_0_V_i");
    sc_trace(mVcdFile, min_distances_0_V_o, "(port)min_distances_0_V_o");
    sc_trace(mVcdFile, min_distances_0_V_o_ap_vld, "(port)min_distances_0_V_o_ap_vld");
    sc_trace(mVcdFile, min_distances_1_V_i, "(port)min_distances_1_V_i");
    sc_trace(mVcdFile, min_distances_1_V_o, "(port)min_distances_1_V_o");
    sc_trace(mVcdFile, min_distances_1_V_o_ap_vld, "(port)min_distances_1_V_o_ap_vld");
    sc_trace(mVcdFile, min_distances_2_V_i, "(port)min_distances_2_V_i");
    sc_trace(mVcdFile, min_distances_2_V_o, "(port)min_distances_2_V_o");
    sc_trace(mVcdFile, min_distances_2_V_o_ap_vld, "(port)min_distances_2_V_o_ap_vld");
    sc_trace(mVcdFile, min_distances_3_V_i, "(port)min_distances_3_V_i");
    sc_trace(mVcdFile, min_distances_3_V_o, "(port)min_distances_3_V_o");
    sc_trace(mVcdFile, min_distances_3_V_o_ap_vld, "(port)min_distances_3_V_o_ap_vld");
    sc_trace(mVcdFile, min_distances_4_V_i, "(port)min_distances_4_V_i");
    sc_trace(mVcdFile, min_distances_4_V_o, "(port)min_distances_4_V_o");
    sc_trace(mVcdFile, min_distances_4_V_o_ap_vld, "(port)min_distances_4_V_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_0, "ap_sig_cseq_ST_pp0_stg0_fsm_0");
    sc_trace(mVcdFile, ap_sig_18, "ap_sig_18");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, p_026_1_4_fu_224_p3, "p_026_1_4_fu_224_p3");
    sc_trace(mVcdFile, tmp_1_fu_248_p2, "tmp_1_fu_248_p2");
    sc_trace(mVcdFile, distance_V_digitrec_bitcount_fu_125_n_V, "distance_V_digitrec_bitcount_fu_125_n_V");
    sc_trace(mVcdFile, distance_V_digitrec_bitcount_fu_125_ap_return, "distance_V_digitrec_bitcount_fu_125_ap_return");
    sc_trace(mVcdFile, train_inst_V_cast_fu_135_p1, "train_inst_V_cast_fu_135_p1");
    sc_trace(mVcdFile, tmp_3_1_fu_146_p2, "tmp_3_1_fu_146_p2");
    sc_trace(mVcdFile, p_030_1_1_fu_152_p3, "p_030_1_1_fu_152_p3");
    sc_trace(mVcdFile, tmp_3_2_fu_164_p2, "tmp_3_2_fu_164_p2");
    sc_trace(mVcdFile, p_026_1_1_cast_fu_160_p1, "p_026_1_1_cast_fu_160_p1");
    sc_trace(mVcdFile, p_026_1_2_fu_178_p3, "p_026_1_2_fu_178_p3");
    sc_trace(mVcdFile, p_030_1_2_fu_170_p3, "p_030_1_2_fu_170_p3");
    sc_trace(mVcdFile, tmp_3_3_fu_190_p2, "tmp_3_3_fu_190_p2");
    sc_trace(mVcdFile, p_030_1_3_fu_196_p3, "p_030_1_3_fu_196_p3");
    sc_trace(mVcdFile, tmp_3_4_fu_204_p2, "tmp_3_4_fu_204_p2");
    sc_trace(mVcdFile, tmp_3_fu_218_p2, "tmp_3_fu_218_p2");
    sc_trace(mVcdFile, p_026_1_3_fu_210_p3, "p_026_1_3_fu_210_p3");
    sc_trace(mVcdFile, p_026_1_2_cast_fu_186_p1, "p_026_1_2_cast_fu_186_p1");
    sc_trace(mVcdFile, tmp_fu_232_p6, "tmp_fu_232_p6");
    sc_trace(mVcdFile, tmp_fu_232_p7, "tmp_fu_232_p7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_pprstidle_pp0, "ap_sig_pprstidle_pp0");
#endif

    }
}

digitrec_update_knn::~digitrec_update_knn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete distance_V_digitrec_bitcount_fu_125;
    delete digitrec_mux_5to1_sel3_6_1_U2;
}

void digitrec_update_knn::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_pp0_stg0_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_start.read();
        }
    }
}

void digitrec_update_knn::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_ap_reg_ppiten_pp0_it0() {
    ap_reg_ppiten_pp0_it0 = ap_start.read();
}

void digitrec_update_knn::thread_ap_sig_18() {
    ap_sig_18 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void digitrec_update_knn::thread_ap_sig_cseq_ST_pp0_stg0_fsm_0() {
    if (ap_sig_18.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_ap_sig_pprstidle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ppiten_pp0_it0.read()))) {
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    } else {
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_distance_V_digitrec_bitcount_fu_125_n_V() {
    distance_V_digitrec_bitcount_fu_125_n_V = (train_inst_V_cast_fu_135_p1.read() ^ test_inst_V.read());
}

void digitrec_update_knn::thread_min_distances_0_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_0))) {
        min_distances_0_V_o = distance_V_digitrec_bitcount_fu_125_ap_return.read();
    } else {
        min_distances_0_V_o = min_distances_0_V_i.read();
    }
}

void digitrec_update_knn::thread_min_distances_0_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_0))) {
        min_distances_0_V_o_ap_vld = ap_const_logic_1;
    } else {
        min_distances_0_V_o_ap_vld = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_min_distances_1_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_1))) {
        min_distances_1_V_o = distance_V_digitrec_bitcount_fu_125_ap_return.read();
    } else {
        min_distances_1_V_o = min_distances_1_V_i.read();
    }
}

void digitrec_update_knn::thread_min_distances_1_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_1))) {
        min_distances_1_V_o_ap_vld = ap_const_logic_1;
    } else {
        min_distances_1_V_o_ap_vld = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_min_distances_2_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_2))) {
        min_distances_2_V_o = distance_V_digitrec_bitcount_fu_125_ap_return.read();
    } else {
        min_distances_2_V_o = min_distances_2_V_i.read();
    }
}

void digitrec_update_knn::thread_min_distances_2_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_2))) {
        min_distances_2_V_o_ap_vld = ap_const_logic_1;
    } else {
        min_distances_2_V_o_ap_vld = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_min_distances_3_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_3))) {
        min_distances_3_V_o = distance_V_digitrec_bitcount_fu_125_ap_return.read();
    } else {
        min_distances_3_V_o = min_distances_3_V_i.read();
    }
}

void digitrec_update_knn::thread_min_distances_3_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_3))) {
        min_distances_3_V_o_ap_vld = ap_const_logic_1;
    } else {
        min_distances_3_V_o_ap_vld = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_min_distances_4_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_2) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_3))) {
        min_distances_4_V_o = distance_V_digitrec_bitcount_fu_125_ap_return.read();
    } else {
        min_distances_4_V_o = min_distances_4_V_i.read();
    }
}

void digitrec_update_knn::thread_min_distances_4_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) && 
         !esl_seteq<1,1,1>(tmp_1_fu_248_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_0) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_1) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_2) && 
         !esl_seteq<1,3,3>(p_026_1_4_fu_224_p3.read(), ap_const_lv3_3))) {
        min_distances_4_V_o_ap_vld = ap_const_logic_1;
    } else {
        min_distances_4_V_o_ap_vld = ap_const_logic_0;
    }
}

void digitrec_update_knn::thread_p_026_1_1_cast_fu_160_p1() {
    p_026_1_1_cast_fu_160_p1 = esl_zext<2,1>(tmp_3_1_fu_146_p2.read());
}

void digitrec_update_knn::thread_p_026_1_2_cast_fu_186_p1() {
    p_026_1_2_cast_fu_186_p1 = esl_zext<3,2>(p_026_1_2_fu_178_p3.read());
}

void digitrec_update_knn::thread_p_026_1_2_fu_178_p3() {
    p_026_1_2_fu_178_p3 = (!tmp_3_2_fu_164_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_3_2_fu_164_p2.read()[0].to_bool())? ap_const_lv2_2: p_026_1_1_cast_fu_160_p1.read());
}

void digitrec_update_knn::thread_p_026_1_3_fu_210_p3() {
    p_026_1_3_fu_210_p3 = (!tmp_3_4_fu_204_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_3_4_fu_204_p2.read()[0].to_bool())? ap_const_lv3_4: ap_const_lv3_3);
}

void digitrec_update_knn::thread_p_026_1_4_fu_224_p3() {
    p_026_1_4_fu_224_p3 = (!tmp_3_fu_218_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_3_fu_218_p2.read()[0].to_bool())? p_026_1_3_fu_210_p3.read(): p_026_1_2_cast_fu_186_p1.read());
}

void digitrec_update_knn::thread_p_030_1_1_fu_152_p3() {
    p_030_1_1_fu_152_p3 = (!tmp_3_1_fu_146_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_3_1_fu_146_p2.read()[0].to_bool())? min_distances_1_V_i.read(): min_distances_0_V_i.read());
}

void digitrec_update_knn::thread_p_030_1_2_fu_170_p3() {
    p_030_1_2_fu_170_p3 = (!tmp_3_2_fu_164_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_3_2_fu_164_p2.read()[0].to_bool())? min_distances_2_V_i.read(): p_030_1_1_fu_152_p3.read());
}

void digitrec_update_knn::thread_p_030_1_3_fu_196_p3() {
    p_030_1_3_fu_196_p3 = (!tmp_3_3_fu_190_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_3_3_fu_190_p2.read()[0].to_bool())? min_distances_3_V_i.read(): p_030_1_2_fu_170_p3.read());
}

void digitrec_update_knn::thread_tmp_1_fu_248_p2() {
    tmp_1_fu_248_p2 = (!distance_V_digitrec_bitcount_fu_125_ap_return.read().is_01() || !tmp_fu_232_p7.read().is_01())? sc_lv<1>(): (sc_biguint<6>(distance_V_digitrec_bitcount_fu_125_ap_return.read()) < sc_biguint<6>(tmp_fu_232_p7.read()));
}

void digitrec_update_knn::thread_tmp_3_1_fu_146_p2() {
    tmp_3_1_fu_146_p2 = (!min_distances_1_V_i.read().is_01() || !min_distances_0_V_i.read().is_01())? sc_lv<1>(): (sc_biguint<6>(min_distances_1_V_i.read()) > sc_biguint<6>(min_distances_0_V_i.read()));
}

void digitrec_update_knn::thread_tmp_3_2_fu_164_p2() {
    tmp_3_2_fu_164_p2 = (!min_distances_2_V_i.read().is_01() || !p_030_1_1_fu_152_p3.read().is_01())? sc_lv<1>(): (sc_biguint<6>(min_distances_2_V_i.read()) > sc_biguint<6>(p_030_1_1_fu_152_p3.read()));
}

void digitrec_update_knn::thread_tmp_3_3_fu_190_p2() {
    tmp_3_3_fu_190_p2 = (!min_distances_3_V_i.read().is_01() || !p_030_1_2_fu_170_p3.read().is_01())? sc_lv<1>(): (sc_biguint<6>(min_distances_3_V_i.read()) > sc_biguint<6>(p_030_1_2_fu_170_p3.read()));
}

void digitrec_update_knn::thread_tmp_3_4_fu_204_p2() {
    tmp_3_4_fu_204_p2 = (!min_distances_4_V_i.read().is_01() || !p_030_1_3_fu_196_p3.read().is_01())? sc_lv<1>(): (sc_biguint<6>(min_distances_4_V_i.read()) > sc_biguint<6>(p_030_1_3_fu_196_p3.read()));
}

void digitrec_update_knn::thread_tmp_3_fu_218_p2() {
    tmp_3_fu_218_p2 = (tmp_3_4_fu_204_p2.read() | tmp_3_3_fu_190_p2.read());
}

void digitrec_update_knn::thread_tmp_fu_232_p6() {
    tmp_fu_232_p6 = (!tmp_3_fu_218_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_3_fu_218_p2.read()[0].to_bool())? p_026_1_3_fu_210_p3.read(): p_026_1_2_cast_fu_186_p1.read());
}

void digitrec_update_knn::thread_train_inst_V_cast_fu_135_p1() {
    train_inst_V_cast_fu_135_p1 = esl_zext<49,48>(train_inst_V.read());
}

void digitrec_update_knn::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

