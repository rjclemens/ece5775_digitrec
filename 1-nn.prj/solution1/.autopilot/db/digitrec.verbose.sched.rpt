

================================================================
== Vivado HLS Report for 'digitrec'
================================================================
* Date:           Fri Jun 18 23:26:15 2021

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        1-nn.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     10.65|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1807|  1807|  1808|  1808|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+------+------+----------+-----------+-----------+------+----------+
        |           |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+------+------+----------+-----------+-----------+------+----------+
        |- MODIFY1  |  1801|  1801|         3|          1|          1|  1800|    yes   |
        +-----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond2)
	3  / (!exitcond2)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	6  / true
6 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_7 [1/1] 0.00ns
.preheader17.preheader:0  call void (...)* @_ssdm_op_SpecBitsMap(i4 0), !map !74

ST_1: stg_8 [1/1] 0.00ns
.preheader17.preheader:1  call void (...)* @_ssdm_op_SpecBitsMap(i49 %input_V), !map !80

ST_1: stg_9 [1/1] 0.00ns
.preheader17.preheader:2  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @digitrec_str) nounwind

ST_1: input_V_read [1/1] 0.00ns
.preheader17.preheader:3  %input_V_read = call i49 @_ssdm_op_Read.ap_auto.i49(i49 %input_V)

ST_1: knn_set_V_0_0 [1/1] 0.00ns
.preheader17.preheader:4  %knn_set_V_0_0 = alloca i6, align 1

ST_1: knn_set_V_1_0 [1/1] 0.00ns
.preheader17.preheader:5  %knn_set_V_1_0 = alloca i6, align 1

ST_1: knn_set_V_2_0 [1/1] 0.00ns
.preheader17.preheader:6  %knn_set_V_2_0 = alloca i6, align 1

ST_1: knn_set_V_3_0 [1/1] 0.00ns
.preheader17.preheader:7  %knn_set_V_3_0 = alloca i6, align 1

ST_1: knn_set_V_4_0 [1/1] 0.00ns
.preheader17.preheader:8  %knn_set_V_4_0 = alloca i6, align 1

ST_1: knn_set_V_5_0 [1/1] 0.00ns
.preheader17.preheader:9  %knn_set_V_5_0 = alloca i6, align 1

ST_1: knn_set_V_6_0 [1/1] 0.00ns
.preheader17.preheader:10  %knn_set_V_6_0 = alloca i6, align 1

ST_1: knn_set_V_7_0 [1/1] 0.00ns
.preheader17.preheader:11  %knn_set_V_7_0 = alloca i6, align 1

ST_1: knn_set_V_8_0 [1/1] 0.00ns
.preheader17.preheader:12  %knn_set_V_8_0 = alloca i6, align 1

ST_1: knn_set_V_9_0 [1/1] 0.00ns
.preheader17.preheader:13  %knn_set_V_9_0 = alloca i6, align 1

ST_1: stg_21 [1/1] 0.00ns
.preheader17.preheader:14  store i6 -14, i6* %knn_set_V_0_0, align 1

ST_1: stg_22 [1/1] 0.00ns
.preheader17.preheader:15  store i6 -14, i6* %knn_set_V_1_0, align 1

ST_1: stg_23 [1/1] 0.00ns
.preheader17.preheader:16  store i6 -14, i6* %knn_set_V_2_0, align 1

ST_1: stg_24 [1/1] 0.00ns
.preheader17.preheader:17  store i6 -14, i6* %knn_set_V_3_0, align 1

ST_1: stg_25 [1/1] 0.00ns
.preheader17.preheader:18  store i6 -14, i6* %knn_set_V_4_0, align 1

ST_1: stg_26 [1/1] 0.00ns
.preheader17.preheader:19  store i6 -14, i6* %knn_set_V_5_0, align 1

ST_1: stg_27 [1/1] 0.00ns
.preheader17.preheader:20  store i6 -14, i6* %knn_set_V_6_0, align 1

ST_1: stg_28 [1/1] 0.00ns
.preheader17.preheader:21  store i6 -14, i6* %knn_set_V_7_0, align 1

ST_1: stg_29 [1/1] 0.00ns
.preheader17.preheader:22  store i6 -14, i6* %knn_set_V_8_0, align 1

ST_1: stg_30 [1/1] 0.00ns
.preheader17.preheader:23  store i6 -14, i6* %knn_set_V_9_0, align 1

ST_1: stg_31 [1/1] 1.57ns
.preheader17.preheader:24  br label %.preheader


 <State 2>: 4.35ns
ST_2: i4 [1/1] 0.00ns
.preheader:0  %i4 = phi i11 [ %i, %0 ], [ 0, %.preheader17.preheader ]

ST_2: exitcond2 [1/1] 2.11ns
.preheader:1  %exitcond2 = icmp eq i11 %i4, -248

ST_2: i [1/1] 1.84ns
.preheader:2  %i = add i11 %i4, 1

ST_2: stg_35 [1/1] 0.00ns
.preheader:3  br i1 %exitcond2, label %1, label %0

ST_2: i4_cast4 [1/1] 0.00ns
:0  %i4_cast4 = zext i11 %i4 to i15

ST_2: i4_cast3 [1/1] 0.00ns
:1  %i4_cast3 = zext i11 %i4 to i14

ST_2: i4_cast3_cast7 [1/1] 0.00ns
:2  %i4_cast3_cast7 = zext i11 %i4 to i12

ST_2: i4_cast3_cast [1/1] 0.00ns
:3  %i4_cast3_cast = zext i11 %i4 to i13

ST_2: tmp_9 [1/1] 0.00ns
:8  %tmp_9 = zext i11 %i4 to i64

ST_2: training_data_V_addr [1/1] 0.00ns
:9  %training_data_V_addr = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9

ST_2: training_data_V_load [2/2] 2.39ns
:10  %training_data_V_load = load i48* %training_data_V_addr, align 8

ST_2: tmp_8_1 [1/1] 1.84ns
:12  %tmp_8_1 = add i12 %i4_cast3_cast7, 1800

ST_2: tmp_9_1 [1/1] 0.00ns
:13  %tmp_9_1 = zext i12 %tmp_8_1 to i64

ST_2: training_data_V_addr_1 [1/1] 0.00ns
:14  %training_data_V_addr_1 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_1

ST_2: training_data_V_load_1 [2/2] 2.39ns
:15  %training_data_V_load_1 = load i48* %training_data_V_addr_1, align 8

ST_2: tmp_8_2 [1/1] 1.96ns
:17  %tmp_8_2 = add i13 %i4_cast3_cast, 3600

ST_2: tmp_9_2 [1/1] 0.00ns
:18  %tmp_9_2 = zext i13 %tmp_8_2 to i64

ST_2: training_data_V_addr_2 [1/1] 0.00ns
:19  %training_data_V_addr_2 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_2

ST_2: training_data_V_load_2 [2/2] 2.39ns
:20  %training_data_V_load_2 = load i48* %training_data_V_addr_2, align 8

ST_2: tmp_8_3 [1/1] 1.96ns
:22  %tmp_8_3 = add i13 %i4_cast3_cast, -2792

ST_2: tmp_9_3 [1/1] 0.00ns
:23  %tmp_9_3 = zext i13 %tmp_8_3 to i64

ST_2: training_data_V_addr_3 [1/1] 0.00ns
:24  %training_data_V_addr_3 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_3

ST_2: training_data_V_load_3 [2/2] 2.39ns
:25  %training_data_V_load_3 = load i48* %training_data_V_addr_3, align 8

ST_2: tmp_8_4 [1/1] 1.96ns
:27  %tmp_8_4 = add i14 %i4_cast3, 7200

ST_2: tmp_9_4 [1/1] 0.00ns
:28  %tmp_9_4 = zext i14 %tmp_8_4 to i64

ST_2: training_data_V_addr_4 [1/1] 0.00ns
:29  %training_data_V_addr_4 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_4

ST_2: training_data_V_load_4 [2/2] 2.39ns
:30  %training_data_V_load_4 = load i48* %training_data_V_addr_4, align 8

ST_2: tmp_8_5 [1/1] 1.96ns
:32  %tmp_8_5 = add i14 %i4_cast3, -7384

ST_2: tmp_9_5 [1/1] 0.00ns
:33  %tmp_9_5 = zext i14 %tmp_8_5 to i64

ST_2: training_data_V_addr_5 [1/1] 0.00ns
:34  %training_data_V_addr_5 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_5

ST_2: training_data_V_load_5 [2/2] 2.39ns
:35  %training_data_V_load_5 = load i48* %training_data_V_addr_5, align 8

ST_2: tmp_8_6 [1/1] 1.96ns
:37  %tmp_8_6 = add i14 %i4_cast3, -5584

ST_2: tmp_9_6 [1/1] 0.00ns
:38  %tmp_9_6 = zext i14 %tmp_8_6 to i64

ST_2: training_data_V_addr_6 [1/1] 0.00ns
:39  %training_data_V_addr_6 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_6

ST_2: training_data_V_load_6 [2/2] 2.39ns
:40  %training_data_V_load_6 = load i48* %training_data_V_addr_6, align 8

ST_2: tmp_8_7 [1/1] 1.96ns
:42  %tmp_8_7 = add i13 %i4_cast3_cast, -3784

ST_2: tmp_8_7_cast6 [1/1] 0.00ns
:43  %tmp_8_7_cast6 = sext i13 %tmp_8_7 to i14

ST_2: tmp_9_7 [1/1] 0.00ns
:44  %tmp_9_7 = zext i14 %tmp_8_7_cast6 to i64

ST_2: training_data_V_addr_7 [1/1] 0.00ns
:45  %training_data_V_addr_7 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_7

ST_2: training_data_V_load_7 [2/2] 2.39ns
:46  %training_data_V_load_7 = load i48* %training_data_V_addr_7, align 8

ST_2: tmp_8_8 [1/1] 1.84ns
:48  %tmp_8_8 = add i12 %i4_cast3_cast7, -1984

ST_2: tmp_8_8_cast5 [1/1] 0.00ns
:49  %tmp_8_8_cast5 = sext i12 %tmp_8_8 to i14

ST_2: tmp_9_8 [1/1] 0.00ns
:50  %tmp_9_8 = zext i14 %tmp_8_8_cast5 to i64

ST_2: training_data_V_addr_8 [1/1] 0.00ns
:51  %training_data_V_addr_8 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_8

ST_2: training_data_V_load_8 [2/2] 2.39ns
:52  %training_data_V_load_8 = load i48* %training_data_V_addr_8, align 8

ST_2: tmp_8_9 [1/1] 1.96ns
:54  %tmp_8_9 = add i15 %i4_cast4, 16200

ST_2: tmp_9_9 [1/1] 0.00ns
:55  %tmp_9_9 = zext i15 %tmp_8_9 to i64

ST_2: training_data_V_addr_9 [1/1] 0.00ns
:56  %training_data_V_addr_9 = getelementptr [18000 x i48]* @training_data_V, i64 0, i64 %tmp_9_9

ST_2: training_data_V_load_9 [2/2] 2.39ns
:57  %training_data_V_load_9 = load i48* %training_data_V_addr_9, align 8


 <State 3>: 2.39ns
ST_3: training_data_V_load [1/2] 2.39ns
:10  %training_data_V_load = load i48* %training_data_V_addr, align 8

ST_3: training_data_V_load_1 [1/2] 2.39ns
:15  %training_data_V_load_1 = load i48* %training_data_V_addr_1, align 8

ST_3: training_data_V_load_2 [1/2] 2.39ns
:20  %training_data_V_load_2 = load i48* %training_data_V_addr_2, align 8

ST_3: training_data_V_load_3 [1/2] 2.39ns
:25  %training_data_V_load_3 = load i48* %training_data_V_addr_3, align 8

ST_3: training_data_V_load_4 [1/2] 2.39ns
:30  %training_data_V_load_4 = load i48* %training_data_V_addr_4, align 8

ST_3: training_data_V_load_5 [1/2] 2.39ns
:35  %training_data_V_load_5 = load i48* %training_data_V_addr_5, align 8

ST_3: training_data_V_load_6 [1/2] 2.39ns
:40  %training_data_V_load_6 = load i48* %training_data_V_addr_6, align 8

ST_3: training_data_V_load_7 [1/2] 2.39ns
:46  %training_data_V_load_7 = load i48* %training_data_V_addr_7, align 8

ST_3: training_data_V_load_8 [1/2] 2.39ns
:52  %training_data_V_load_8 = load i48* %training_data_V_addr_8, align 8

ST_3: training_data_V_load_9 [1/2] 2.39ns
:57  %training_data_V_load_9 = load i48* %training_data_V_addr_9, align 8


 <State 4>: 10.65ns
ST_4: empty [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1800, i64 1800, i64 1800)

ST_4: stg_92 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str4) nounwind

ST_4: tmp_s [1/1] 0.00ns
:6  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str4)

ST_4: stg_94 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_4: stg_95 [1/1] 10.65ns
:11  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load, i6* %knn_set_V_0_0)

ST_4: stg_96 [1/1] 10.65ns
:16  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_1, i6* %knn_set_V_1_0)

ST_4: stg_97 [1/1] 10.65ns
:21  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_2, i6* %knn_set_V_2_0)

ST_4: stg_98 [1/1] 10.65ns
:26  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_3, i6* %knn_set_V_3_0)

ST_4: stg_99 [1/1] 10.65ns
:31  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_4, i6* %knn_set_V_4_0)

ST_4: stg_100 [1/1] 10.65ns
:36  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_5, i6* %knn_set_V_5_0)

ST_4: stg_101 [1/1] 10.65ns
:41  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_6, i6* %knn_set_V_6_0)

ST_4: stg_102 [1/1] 10.65ns
:47  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_7, i6* %knn_set_V_7_0)

ST_4: stg_103 [1/1] 10.65ns
:53  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_8, i6* %knn_set_V_8_0)

ST_4: stg_104 [1/1] 10.65ns
:58  call fastcc void @digitrec_update_knn(i49 %input_V_read, i48 %training_data_V_load_9, i6* %knn_set_V_9_0)

ST_4: empty_2 [1/1] 0.00ns
:59  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str4, i32 %tmp_s)

ST_4: stg_106 [1/1] 0.00ns
:60  br label %.preheader


 <State 5>: 8.55ns
ST_5: knn_set_V_0_0_load [1/1] 0.00ns
:0  %knn_set_V_0_0_load = load i6* %knn_set_V_0_0, align 1

ST_5: knn_set_V_1_0_load [1/1] 0.00ns
:1  %knn_set_V_1_0_load = load i6* %knn_set_V_1_0, align 1

ST_5: knn_set_V_2_0_load [1/1] 0.00ns
:2  %knn_set_V_2_0_load = load i6* %knn_set_V_2_0, align 1

ST_5: knn_set_V_3_0_load [1/1] 0.00ns
:3  %knn_set_V_3_0_load = load i6* %knn_set_V_3_0, align 1

ST_5: knn_set_V_4_0_load [1/1] 0.00ns
:4  %knn_set_V_4_0_load = load i6* %knn_set_V_4_0, align 1

ST_5: knn_set_V_5_0_load [1/1] 0.00ns
:5  %knn_set_V_5_0_load = load i6* %knn_set_V_5_0, align 1

ST_5: knn_set_V_6_0_load [1/1] 0.00ns
:6  %knn_set_V_6_0_load = load i6* %knn_set_V_6_0, align 1

ST_5: knn_set_V_7_0_load [1/1] 0.00ns
:7  %knn_set_V_7_0_load = load i6* %knn_set_V_7_0, align 1

ST_5: knn_set_V_8_0_load [1/1] 0.00ns
:8  %knn_set_V_8_0_load = load i6* %knn_set_V_8_0, align 1

ST_5: knn_set_V_9_0_load [1/1] 0.00ns
:9  %knn_set_V_9_0_load = load i6* %knn_set_V_9_0, align 1

ST_5: agg_result_V_s [2/2] 8.55ns
:10  %agg_result_V_s = call fastcc i4 @digitrec_knn_vote(i6 %knn_set_V_0_0_load, i6 %knn_set_V_1_0_load, i6 %knn_set_V_2_0_load, i6 %knn_set_V_3_0_load, i6 %knn_set_V_4_0_load, i6 %knn_set_V_5_0_load, i6 %knn_set_V_6_0_load, i6 %knn_set_V_7_0_load, i6 %knn_set_V_8_0_load, i6 %knn_set_V_9_0_load)


 <State 6>: 8.55ns
ST_6: agg_result_V_s [1/2] 8.55ns
:10  %agg_result_V_s = call fastcc i4 @digitrec_knn_vote(i6 %knn_set_V_0_0_load, i6 %knn_set_V_1_0_load, i6 %knn_set_V_2_0_load, i6 %knn_set_V_3_0_load, i6 %knn_set_V_4_0_load, i6 %knn_set_V_5_0_load, i6 %knn_set_V_6_0_load, i6 %knn_set_V_7_0_load, i6 %knn_set_V_8_0_load, i6 %knn_set_V_9_0_load)

ST_6: stg_119 [1/1] 0.00ns
:11  ret i4 %agg_result_V_s



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 4>: 10.7ns
The critical path consists of the following:
	'call' operation (digitrec.cpp:42) to 'digitrec_update_knn' (10.7 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
