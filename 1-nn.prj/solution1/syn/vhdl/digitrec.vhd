-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity digitrec is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_V : IN STD_LOGIC_VECTOR (48 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of digitrec is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "digitrec,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.652600,HLS_SYN_LAT=1807,HLS_SYN_TPT=none,HLS_SYN_MEM=480,HLS_SYN_DSP=0,HLS_SYN_FF=595,HLS_SYN_LUT=2129}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st5_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv11_708 : STD_LOGIC_VECTOR (10 downto 0) := "11100001000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_708 : STD_LOGIC_VECTOR (11 downto 0) := "011100001000";
    constant ap_const_lv13_E10 : STD_LOGIC_VECTOR (12 downto 0) := "0111000010000";
    constant ap_const_lv13_1518 : STD_LOGIC_VECTOR (12 downto 0) := "1010100011000";
    constant ap_const_lv14_1C20 : STD_LOGIC_VECTOR (13 downto 0) := "01110000100000";
    constant ap_const_lv14_2328 : STD_LOGIC_VECTOR (13 downto 0) := "10001100101000";
    constant ap_const_lv14_2A30 : STD_LOGIC_VECTOR (13 downto 0) := "10101000110000";
    constant ap_const_lv13_1138 : STD_LOGIC_VECTOR (12 downto 0) := "1000100111000";
    constant ap_const_lv12_840 : STD_LOGIC_VECTOR (11 downto 0) := "100001000000";
    constant ap_const_lv15_3F48 : STD_LOGIC_VECTOR (14 downto 0) := "011111101001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_19 : BOOLEAN;
    signal training_data_V_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce0 : STD_LOGIC;
    signal training_data_V_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce1 : STD_LOGIC;
    signal training_data_V_q1 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address2 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce2 : STD_LOGIC;
    signal training_data_V_q2 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address3 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce3 : STD_LOGIC;
    signal training_data_V_q3 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address4 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce4 : STD_LOGIC;
    signal training_data_V_q4 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address5 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce5 : STD_LOGIC;
    signal training_data_V_q5 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address6 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce6 : STD_LOGIC;
    signal training_data_V_q6 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address7 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce7 : STD_LOGIC;
    signal training_data_V_q7 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address8 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce8 : STD_LOGIC;
    signal training_data_V_q8 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_address9 : STD_LOGIC_VECTOR (14 downto 0);
    signal training_data_V_ce9 : STD_LOGIC;
    signal training_data_V_q9 : STD_LOGIC_VECTOR (47 downto 0);
    signal i4_reg_227 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_636 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_85 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_378_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal training_data_V_load_reg_695 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_1_reg_700 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_2_reg_705 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_3_reg_710 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_4_reg_715 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_5_reg_720 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_6_reg_725 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_7_reg_730 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_8_reg_735 : STD_LOGIC_VECTOR (47 downto 0);
    signal training_data_V_load_9_reg_740 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_2 : STD_LOGIC;
    signal ap_sig_141 : BOOLEAN;
    signal stg_95_digitrec_update_knn_fu_238_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_95_digitrec_update_knn_fu_238_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_96_digitrec_update_knn_fu_245_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_96_digitrec_update_knn_fu_245_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_97_digitrec_update_knn_fu_252_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_97_digitrec_update_knn_fu_252_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_98_digitrec_update_knn_fu_259_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_98_digitrec_update_knn_fu_259_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_99_digitrec_update_knn_fu_266_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_99_digitrec_update_knn_fu_266_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_100_digitrec_update_knn_fu_273_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_100_digitrec_update_knn_fu_273_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_101_digitrec_update_knn_fu_280_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_101_digitrec_update_knn_fu_280_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_102_digitrec_update_knn_fu_287_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_102_digitrec_update_knn_fu_287_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_103_digitrec_update_knn_fu_294_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_103_digitrec_update_knn_fu_294_min_distances_V_o_ap_vld : STD_LOGIC;
    signal stg_104_digitrec_update_knn_fu_301_min_distances_V_o : STD_LOGIC_VECTOR (5 downto 0);
    signal stg_104_digitrec_update_knn_fu_301_min_distances_V_o_ap_vld : STD_LOGIC;
    signal grp_digitrec_knn_vote_fu_308_ap_start : STD_LOGIC;
    signal grp_digitrec_knn_vote_fu_308_ap_done : STD_LOGIC;
    signal grp_digitrec_knn_vote_fu_308_ap_idle : STD_LOGIC;
    signal grp_digitrec_knn_vote_fu_308_ap_ready : STD_LOGIC;
    signal grp_digitrec_knn_vote_fu_308_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal knn_set_V_0_0_fu_70 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_1_0_fu_74 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_2_0_fu_78 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_3_0_fu_82 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_4_0_fu_86 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_5_0_fu_90 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_6_0_fu_94 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_7_0_fu_98 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_8_0_fu_102 : STD_LOGIC_VECTOR (5 downto 0);
    signal knn_set_V_9_0_fu_106 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_grp_digitrec_knn_vote_fu_308_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st6_fsm_3 : STD_LOGIC;
    signal ap_sig_284 : BOOLEAN;
    signal tmp_9_fu_400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_1_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_2_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_3_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_4_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_5_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_6_fu_466_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_7_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_8_fu_496_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_9_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i4_cast3_cast7_fu_392_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_1_fu_405_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i4_cast3_cast_fu_396_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_2_fu_416_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_3_fu_427_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i4_cast3_fu_388_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_4_fu_438_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_5_fu_449_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_6_fu_460_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_7_fu_471_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_7_cast6_fu_477_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_8_fu_486_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_8_cast5_fu_492_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal i4_cast4_fu_384_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_9_fu_501_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component digitrec_update_knn IS
    port (
        test_inst_V : IN STD_LOGIC_VECTOR (48 downto 0);
        train_inst_V : IN STD_LOGIC_VECTOR (47 downto 0);
        min_distances_V_i : IN STD_LOGIC_VECTOR (5 downto 0);
        min_distances_V_o : OUT STD_LOGIC_VECTOR (5 downto 0);
        min_distances_V_o_ap_vld : OUT STD_LOGIC );
    end component;


    component digitrec_knn_vote IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (5 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component digitrec_training_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address2 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address3 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address4 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address5 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address6 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address7 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address8 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (47 downto 0);
        address9 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;



begin
    training_data_V_U : component digitrec_training_data_V
    generic map (
        DataWidth => 48,
        AddressRange => 18000,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => training_data_V_address0,
        ce0 => training_data_V_ce0,
        q0 => training_data_V_q0,
        address1 => training_data_V_address1,
        ce1 => training_data_V_ce1,
        q1 => training_data_V_q1,
        address2 => training_data_V_address2,
        ce2 => training_data_V_ce2,
        q2 => training_data_V_q2,
        address3 => training_data_V_address3,
        ce3 => training_data_V_ce3,
        q3 => training_data_V_q3,
        address4 => training_data_V_address4,
        ce4 => training_data_V_ce4,
        q4 => training_data_V_q4,
        address5 => training_data_V_address5,
        ce5 => training_data_V_ce5,
        q5 => training_data_V_q5,
        address6 => training_data_V_address6,
        ce6 => training_data_V_ce6,
        q6 => training_data_V_q6,
        address7 => training_data_V_address7,
        ce7 => training_data_V_ce7,
        q7 => training_data_V_q7,
        address8 => training_data_V_address8,
        ce8 => training_data_V_ce8,
        q8 => training_data_V_q8,
        address9 => training_data_V_address9,
        ce9 => training_data_V_ce9,
        q9 => training_data_V_q9);

    stg_95_digitrec_update_knn_fu_238 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_reg_695,
        min_distances_V_i => knn_set_V_0_0_fu_70,
        min_distances_V_o => stg_95_digitrec_update_knn_fu_238_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_95_digitrec_update_knn_fu_238_min_distances_V_o_ap_vld);

    stg_96_digitrec_update_knn_fu_245 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_1_reg_700,
        min_distances_V_i => knn_set_V_1_0_fu_74,
        min_distances_V_o => stg_96_digitrec_update_knn_fu_245_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_96_digitrec_update_knn_fu_245_min_distances_V_o_ap_vld);

    stg_97_digitrec_update_knn_fu_252 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_2_reg_705,
        min_distances_V_i => knn_set_V_2_0_fu_78,
        min_distances_V_o => stg_97_digitrec_update_knn_fu_252_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_97_digitrec_update_knn_fu_252_min_distances_V_o_ap_vld);

    stg_98_digitrec_update_knn_fu_259 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_3_reg_710,
        min_distances_V_i => knn_set_V_3_0_fu_82,
        min_distances_V_o => stg_98_digitrec_update_knn_fu_259_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_98_digitrec_update_knn_fu_259_min_distances_V_o_ap_vld);

    stg_99_digitrec_update_knn_fu_266 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_4_reg_715,
        min_distances_V_i => knn_set_V_4_0_fu_86,
        min_distances_V_o => stg_99_digitrec_update_knn_fu_266_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_99_digitrec_update_knn_fu_266_min_distances_V_o_ap_vld);

    stg_100_digitrec_update_knn_fu_273 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_5_reg_720,
        min_distances_V_i => knn_set_V_5_0_fu_90,
        min_distances_V_o => stg_100_digitrec_update_knn_fu_273_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_100_digitrec_update_knn_fu_273_min_distances_V_o_ap_vld);

    stg_101_digitrec_update_knn_fu_280 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_6_reg_725,
        min_distances_V_i => knn_set_V_6_0_fu_94,
        min_distances_V_o => stg_101_digitrec_update_knn_fu_280_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_101_digitrec_update_knn_fu_280_min_distances_V_o_ap_vld);

    stg_102_digitrec_update_knn_fu_287 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_7_reg_730,
        min_distances_V_i => knn_set_V_7_0_fu_98,
        min_distances_V_o => stg_102_digitrec_update_knn_fu_287_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_102_digitrec_update_knn_fu_287_min_distances_V_o_ap_vld);

    stg_103_digitrec_update_knn_fu_294 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_8_reg_735,
        min_distances_V_i => knn_set_V_8_0_fu_102,
        min_distances_V_o => stg_103_digitrec_update_knn_fu_294_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_103_digitrec_update_knn_fu_294_min_distances_V_o_ap_vld);

    stg_104_digitrec_update_knn_fu_301 : component digitrec_update_knn
    port map (
        test_inst_V => input_V,
        train_inst_V => training_data_V_load_9_reg_740,
        min_distances_V_i => knn_set_V_9_0_fu_106,
        min_distances_V_o => stg_104_digitrec_update_knn_fu_301_min_distances_V_o,
        min_distances_V_o_ap_vld => stg_104_digitrec_update_knn_fu_301_min_distances_V_o_ap_vld);

    grp_digitrec_knn_vote_fu_308 : component digitrec_knn_vote
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_digitrec_knn_vote_fu_308_ap_start,
        ap_done => grp_digitrec_knn_vote_fu_308_ap_done,
        ap_idle => grp_digitrec_knn_vote_fu_308_ap_idle,
        ap_ready => grp_digitrec_knn_vote_fu_308_ap_ready,
        p_read => knn_set_V_0_0_fu_70,
        p_read1 => knn_set_V_1_0_fu_74,
        p_read2 => knn_set_V_2_0_fu_78,
        p_read3 => knn_set_V_3_0_fu_82,
        p_read4 => knn_set_V_4_0_fu_86,
        p_read5 => knn_set_V_5_0_fu_90,
        p_read6 => knn_set_V_6_0_fu_94,
        p_read7 => knn_set_V_7_0_fu_98,
        p_read8 => knn_set_V_8_0_fu_102,
        p_read9 => knn_set_V_9_0_fu_106,
        ap_return => grp_digitrec_knn_vote_fu_308_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_digitrec_knn_vote_fu_308_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_digitrec_knn_vote_fu_308_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
                    ap_reg_grp_digitrec_knn_vote_fu_308_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_digitrec_knn_vote_fu_308_ap_ready)) then 
                    ap_reg_grp_digitrec_knn_vote_fu_308_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((exitcond2_fu_372_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond2_fu_372_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((exitcond2_fu_372_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
            end if;
        end if;
    end process;


    i4_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i4_reg_227 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond2_fu_372_p2 = ap_const_lv1_0))) then 
                i4_reg_227 <= i_fu_378_p2;
            end if; 
        end if;
    end process;

    knn_set_V_0_0_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_0_0_fu_70 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_95_digitrec_update_knn_fu_238_min_distances_V_o_ap_vld))) then 
                knn_set_V_0_0_fu_70 <= stg_95_digitrec_update_knn_fu_238_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_1_0_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_1_0_fu_74 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_96_digitrec_update_knn_fu_245_min_distances_V_o_ap_vld))) then 
                knn_set_V_1_0_fu_74 <= stg_96_digitrec_update_knn_fu_245_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_2_0_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_2_0_fu_78 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_97_digitrec_update_knn_fu_252_min_distances_V_o_ap_vld))) then 
                knn_set_V_2_0_fu_78 <= stg_97_digitrec_update_knn_fu_252_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_3_0_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_3_0_fu_82 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_98_digitrec_update_knn_fu_259_min_distances_V_o_ap_vld))) then 
                knn_set_V_3_0_fu_82 <= stg_98_digitrec_update_knn_fu_259_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_4_0_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_4_0_fu_86 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_99_digitrec_update_knn_fu_266_min_distances_V_o_ap_vld))) then 
                knn_set_V_4_0_fu_86 <= stg_99_digitrec_update_knn_fu_266_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_5_0_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_5_0_fu_90 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_100_digitrec_update_knn_fu_273_min_distances_V_o_ap_vld))) then 
                knn_set_V_5_0_fu_90 <= stg_100_digitrec_update_knn_fu_273_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_6_0_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_6_0_fu_94 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_101_digitrec_update_knn_fu_280_min_distances_V_o_ap_vld))) then 
                knn_set_V_6_0_fu_94 <= stg_101_digitrec_update_knn_fu_280_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_7_0_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_7_0_fu_98 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_102_digitrec_update_knn_fu_287_min_distances_V_o_ap_vld))) then 
                knn_set_V_7_0_fu_98 <= stg_102_digitrec_update_knn_fu_287_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_8_0_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_8_0_fu_102 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_103_digitrec_update_knn_fu_294_min_distances_V_o_ap_vld))) then 
                knn_set_V_8_0_fu_102 <= stg_103_digitrec_update_knn_fu_294_min_distances_V_o;
            end if; 
        end if;
    end process;

    knn_set_V_9_0_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                knn_set_V_9_0_fu_106 <= ap_const_lv6_32;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 = ap_const_lv1_0) and (ap_const_logic_1 = stg_104_digitrec_update_knn_fu_301_min_distances_V_o_ap_vld))) then 
                knn_set_V_9_0_fu_106 <= stg_104_digitrec_update_knn_fu_301_min_distances_V_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then
                ap_reg_ppstg_exitcond2_reg_636_pp0_iter1 <= exitcond2_reg_636;
                exitcond2_reg_636 <= exitcond2_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond2_reg_636 = ap_const_lv1_0))) then
                training_data_V_load_1_reg_700 <= training_data_V_q1;
                training_data_V_load_2_reg_705 <= training_data_V_q2;
                training_data_V_load_3_reg_710 <= training_data_V_q3;
                training_data_V_load_4_reg_715 <= training_data_V_q4;
                training_data_V_load_5_reg_720 <= training_data_V_q5;
                training_data_V_load_6_reg_725 <= training_data_V_q6;
                training_data_V_load_7_reg_730 <= training_data_V_q7;
                training_data_V_load_8_reg_735 <= training_data_V_q8;
                training_data_V_load_9_reg_740 <= training_data_V_q9;
                training_data_V_load_reg_695 <= training_data_V_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond2_fu_372_p2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, grp_digitrec_knn_vote_fu_308_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond2_fu_372_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond2_fu_372_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_2;
                end if;
            when ap_ST_st5_fsm_2 => 
                ap_NS_fsm <= ap_ST_st6_fsm_3;
            when ap_ST_st6_fsm_3 => 
                if (not((ap_const_logic_0 = grp_digitrec_knn_vote_fu_308_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(grp_digitrec_knn_vote_fu_308_ap_done, ap_sig_cseq_ST_st6_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_3) and not((ap_const_logic_0 = grp_digitrec_knn_vote_fu_308_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_digitrec_knn_vote_fu_308_ap_done, ap_sig_cseq_ST_st6_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_3) and not((ap_const_logic_0 = grp_digitrec_knn_vote_fu_308_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= grp_digitrec_knn_vote_fu_308_ap_return;

    ap_sig_141_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_141 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_19_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_19 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_284_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_284 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_85_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_85 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_85)
    begin
        if (ap_sig_85) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_19)
    begin
        if (ap_sig_19) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_2_assign_proc : process(ap_sig_141)
    begin
        if (ap_sig_141) then 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_3_assign_proc : process(ap_sig_284)
    begin
        if (ap_sig_284) then 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_372_p2 <= "1" when (i4_reg_227 = ap_const_lv11_708) else "0";
    grp_digitrec_knn_vote_fu_308_ap_start <= ap_reg_grp_digitrec_knn_vote_fu_308_ap_start;
    i4_cast3_cast7_fu_392_p1 <= std_logic_vector(resize(unsigned(i4_reg_227),12));
    i4_cast3_cast_fu_396_p1 <= std_logic_vector(resize(unsigned(i4_reg_227),13));
    i4_cast3_fu_388_p1 <= std_logic_vector(resize(unsigned(i4_reg_227),14));
    i4_cast4_fu_384_p1 <= std_logic_vector(resize(unsigned(i4_reg_227),15));
    i_fu_378_p2 <= std_logic_vector(unsigned(i4_reg_227) + unsigned(ap_const_lv11_1));
    tmp_8_1_fu_405_p2 <= std_logic_vector(unsigned(i4_cast3_cast7_fu_392_p1) + unsigned(ap_const_lv12_708));
    tmp_8_2_fu_416_p2 <= std_logic_vector(unsigned(i4_cast3_cast_fu_396_p1) + unsigned(ap_const_lv13_E10));
    tmp_8_3_fu_427_p2 <= std_logic_vector(unsigned(i4_cast3_cast_fu_396_p1) + unsigned(ap_const_lv13_1518));
    tmp_8_4_fu_438_p2 <= std_logic_vector(unsigned(i4_cast3_fu_388_p1) + unsigned(ap_const_lv14_1C20));
    tmp_8_5_fu_449_p2 <= std_logic_vector(unsigned(i4_cast3_fu_388_p1) + unsigned(ap_const_lv14_2328));
    tmp_8_6_fu_460_p2 <= std_logic_vector(unsigned(i4_cast3_fu_388_p1) + unsigned(ap_const_lv14_2A30));
        tmp_8_7_cast6_fu_477_p1 <= std_logic_vector(resize(signed(tmp_8_7_fu_471_p2),14));

    tmp_8_7_fu_471_p2 <= std_logic_vector(unsigned(i4_cast3_cast_fu_396_p1) + unsigned(ap_const_lv13_1138));
        tmp_8_8_cast5_fu_492_p1 <= std_logic_vector(resize(signed(tmp_8_8_fu_486_p2),14));

    tmp_8_8_fu_486_p2 <= std_logic_vector(unsigned(i4_cast3_cast7_fu_392_p1) + unsigned(ap_const_lv12_840));
    tmp_8_9_fu_501_p2 <= std_logic_vector(unsigned(i4_cast4_fu_384_p1) + unsigned(ap_const_lv15_3F48));
    tmp_9_1_fu_411_p1 <= std_logic_vector(resize(unsigned(tmp_8_1_fu_405_p2),64));
    tmp_9_2_fu_422_p1 <= std_logic_vector(resize(unsigned(tmp_8_2_fu_416_p2),64));
    tmp_9_3_fu_433_p1 <= std_logic_vector(resize(unsigned(tmp_8_3_fu_427_p2),64));
    tmp_9_4_fu_444_p1 <= std_logic_vector(resize(unsigned(tmp_8_4_fu_438_p2),64));
    tmp_9_5_fu_455_p1 <= std_logic_vector(resize(unsigned(tmp_8_5_fu_449_p2),64));
    tmp_9_6_fu_466_p1 <= std_logic_vector(resize(unsigned(tmp_8_6_fu_460_p2),64));
    tmp_9_7_fu_481_p1 <= std_logic_vector(resize(unsigned(tmp_8_7_cast6_fu_477_p1),64));
    tmp_9_8_fu_496_p1 <= std_logic_vector(resize(unsigned(tmp_8_8_cast5_fu_492_p1),64));
    tmp_9_9_fu_507_p1 <= std_logic_vector(resize(unsigned(tmp_8_9_fu_501_p2),64));
    tmp_9_fu_400_p1 <= std_logic_vector(resize(unsigned(i4_reg_227),64));
    training_data_V_address0 <= tmp_9_fu_400_p1(15 - 1 downto 0);
    training_data_V_address1 <= tmp_9_1_fu_411_p1(15 - 1 downto 0);
    training_data_V_address2 <= tmp_9_2_fu_422_p1(15 - 1 downto 0);
    training_data_V_address3 <= tmp_9_3_fu_433_p1(15 - 1 downto 0);
    training_data_V_address4 <= tmp_9_4_fu_444_p1(15 - 1 downto 0);
    training_data_V_address5 <= tmp_9_5_fu_455_p1(15 - 1 downto 0);
    training_data_V_address6 <= tmp_9_6_fu_466_p1(15 - 1 downto 0);
    training_data_V_address7 <= tmp_9_7_fu_481_p1(15 - 1 downto 0);
    training_data_V_address8 <= tmp_9_8_fu_496_p1(15 - 1 downto 0);
    training_data_V_address9 <= tmp_9_9_fu_507_p1(15 - 1 downto 0);

    training_data_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce0 <= ap_const_logic_1;
        else 
            training_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce1 <= ap_const_logic_1;
        else 
            training_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce2_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce2 <= ap_const_logic_1;
        else 
            training_data_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce3_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce3 <= ap_const_logic_1;
        else 
            training_data_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce4 <= ap_const_logic_1;
        else 
            training_data_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce5_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce5 <= ap_const_logic_1;
        else 
            training_data_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce6_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce6 <= ap_const_logic_1;
        else 
            training_data_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce7_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce7 <= ap_const_logic_1;
        else 
            training_data_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce8_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce8 <= ap_const_logic_1;
        else 
            training_data_V_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    training_data_V_ce9_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            training_data_V_ce9 <= ap_const_logic_1;
        else 
            training_data_V_ce9 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
